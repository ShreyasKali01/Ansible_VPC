---
- name: setup Vprofile Stack
  hosts: localhost
  connection: local
  gather_facts: no
  tasks:
    - name: import VPC setup Variable
      include_vars: vars/vpc_setup
    - name: include output vars
      include_vars: vars/output_vars
    - name: create vprofile key
      ec2_key:
        name: vprokey
        region: "{{region}}"
      register: vprokey_out
    - name: save private key into file loginkey_vpro.pem
      copy:
        content: "{{vprokey_out.key.private_key}}"
        dest: "./loginkey_vpro.pem"
        mode: 0600
      when: vprokey_out.changed
    - name: create security grp for vpro elastic lb
      ec2_group:
        name: vproELB-sg
        description: Allow port 80 from everywhere and anywhere
        region: "{{region}}"
        vpc_id: "{{vpc_id}}"
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: "0.0.0.0/0"
      register: vproELBSG_out
    - debug:
        var: vproELBSG_out
    - name: create security grp for vprostack
      ec2_group:
        name: vprostack-sg
        description: Allow port 80 from everywhere and anywhere
        region: "{{region}}"
        vpc_id: "{{vpc_id}}"
        purge_rules: no
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            group_id: "{{vproELBSG_out.group_id}}"
          - proto: tcp
            from_port: 22
            to_port: 22
            group_id: "{{BastionSGid}}"
      register: vprostackSG_out
    - debug:
        var: vprostackSG_out
    - name: update
      ec2_group:
        name: vprostack-sg
        description: Allow port 22 from everywhere and anywhere
        region: "{{region}}"
        vpc_id: "{{vpc_id}}"
        purge_rules: no
        rules:
          - proto: all
            group_id: "{{vprostackSG_out.group_id}}"
    - name: creating nginx web01
      ec2:
        key_name: vprokey
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{ nginx_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "web01"
          Project: Vprofile
          Owner: Shreyas
        exact_count: 1
        count_tag:
          Name: "web01"
          Project: Vprofile
          Owner: Shreyas
        group_id: "{{vprostackSG_out.group_id}}"
        vpc_subnet_id: "{{privsub1id}}"
      register: web01_out

    - name: creating tomcat app01
      ec2:
        key_name: vprokey
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{ tomcat_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "app01"
          Project: Vprofile
          Owner: Shreyas
        exact_count: 1
        count_tag:
          Name: "app01"
          Project: Vprofile
          Owner: Shreyas
        group_id: "{{vprostackSG_out.group_id}}"
        vpc_subnet_id: "{{privsub1id}}"
      register: app01_out

    - name: creating memecache mc01
      ec2:
        key_name: vprokey
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{ tomcat_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "app01"
          Project: Vprofile
          Owner: Shreyas
        exact_count: 1
        count_tag:
          Name: "mc01"
          Project: Vprofile
          Owner: Shreyas
        group_id: "{{vprostackSG_out.group_id}}"
        vpc_subnet_id: "{{privsub1id}}"
      register: mc01_out

    - name: creating rabbitmq 
      ec2:
        key_name: vprokey
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{ rmq_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "rmq01"
          Project: Vprofile
          Owner: Shreyas
        exact_count: 1
        count_tag:
          Name: "rmq01"
          Project: Vprofile
          Owner: Shreyas
        group_id: "{{vprostackSG_out.group_id}}"
        vpc_subnet_id: "{{privsub1id}}"
      register: rmq01_out
 
    - name: creating Mysql  db01
      ec2:
        key_name: vprokey
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{ mysql_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "db01"
          Project: Vprofile
          Owner: Shreyas
        exact_count: 1
        count_tag:
          Name: "db01"
          Project: Vprofile
          Owner: Shreyas
        group_id: "{{vprostackSG_out.group_id}}"
        vpc_subnet_id: "{{privsub1id}}"
      register: db01_out

    - debug:
        var: db01_out

    - local_action:
        module: ec2_elb_lb
        name: "vprofile-elb"
        region: "{{region}}"
        state: present
        instance_ids:
          - "{{ web01_out.tagged_instances[0].id}}"
        purge_instance_ids: true
        security_group_ids: "{{ vproELBSG_out.group_id }}"
        subnets:
          - "{{ pubsub1id }}"
          -  "{{ pubsub2id }}"
          -  "{{ pubsub3id }}"
        listeners:
          - protocol: http
            load_balancer_port: 80
            instance_port: 80
    - name: insert host IP and Name in File provision-stack 
      blockinfile:
        path: provision-stack/group_vars/hostsip
        block: |
          web01_ip: {{ web01_out.tagged_instances[0].private_ip }}
          app01_ip: {{ app01_out.tagged_instances[0].private_ip }}
          rmq01_ip: {{ rmq01_out.tagged_instances[0].private_ip }}
          mc01_ip: {{ mc01_out.tagged_instances[0].private_ip }}
          db01_ip: {{ db01_out.tagged_instances[0].private_ip }}

    - name: Copy login key to provision_stack directory
      copy:
        src: loginkey_vpro.pem
        dest: provision-stack/loginkey_vpro.pem
        mode: '0400'

    - name: insert inventory file provision-stack
      blockinfile:
        path: provision-stack/inventory-vpro
        block: |
          web01 ansible_host= {{ web01_out.tagged_instances[0].private_ip }}
          app01 ansible_host= {{ app01_out.tagged_instances[0].private_ip }}
          rmq01 ansible_host= {{ rmq01_out.tagged_instances[0].private_ip }}
          mc01 ansible_host= {{ mc01_out.tagged_instances[0].private_ip }}
          db01 ansible_host= {{ db01_out.tagged_instances[0].private_ip }}
          cntl ansible_host= 127.0.0.1 ansible_connection=local

          [websrvgrp]
          web01

          [appsrvgrp]
          app01
          
          [rmqsrvgrp]
          rmq01
          
          [control]
          cntl

          [stack_installation]
          websrvgrp
          appsrvgrp
          rmqsrvgrp
          mcsrvgrp
          dbsrvgrp
           

          [stack_inst:vars]
          ansible_user=ubuntu
          ansible_ssh_private_key_file=loginkey_vpro.pem
          #ansible_python_interpreter=/usr/bin/python3 

